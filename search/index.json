[{"content":" 官方教程 https://cobra.dev/\ncobra-cli 命令行使用\n1 2 3 4 5 mkdir mycli \u0026amp;\u0026amp; cd mycli go mod init mycli cobra-cli init [--author \u0026#34;lu-hongcheng\u0026#34; --license mit] cobra-cli add say cobra add hello -p sayCmd 这种方式文件结构比较固定，一般我还是采用手撸的方式\n以云原生项目 karpor 为例\n1. 项目启动 cmd/karpor/main.go:31\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 package main import ( \u0026#34;os\u0026#34; \u0026#34;github.com/KusionStack/karpor/cmd/karpor/app\u0026#34; genericapiserver \u0026#34;k8s.io/apiserver/pkg/server\u0026#34; \u0026#34;k8s.io/component-base/cli\u0026#34; ) func main() { ctx := genericapiserver.SetupSignalContext() cmd := app.NewServerCommand(ctx) syncCmd := app.NewSyncerCommand(ctx) cmd.AddCommand(syncCmd) code := cli.Run(cmd) os.Exit(code) } SetupSignalContext 返回 context，接受信号 SIGTERM 和 SIGINT 时被取消\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var onlyOneSignalHandler = make(chan struct{}) func SetupSignalContext() context.Context { close(onlyOneSignalHandler) // panics when called twice shutdownHandler = make(chan os.Signal, 2) ctx, cancel := context.WithCancel(context.Background()) signal.Notify(shutdownHandler, shutdownSignals...) go func() { \u0026lt;-shutdownHandler cancel() \u0026lt;-shutdownHandler os.Exit(1) // second signal. Exit directly. }() return ctx } 这其实和很多后端项目的起手式一样\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 func (a *App) Run(ctx context.Context) error { ctx, cancel := context.WithCancel(ctx) defer cancel() signals := make(chan os.Signal, 1) signal.Notify(signals, syscall.SIGINT, syscall.SIGTERM) for _, srv := range a.servers { go func(srv server.Server) { err := srv.Start(ctx) if err != nil { log.Printf(\u0026#34;Server start err: %v\u0026#34;, err) } }(srv) } select { case \u0026lt;-signals: // Received termination signal log.Println(\u0026#34;Received termination signal\u0026#34;) case \u0026lt;-ctx.Done(): // Context canceled log.Println(\u0026#34;Context canceled\u0026#34;) } // Gracefully stop the servers for _, srv := range a.servers { err := srv.Stop(ctx) if err != nil { log.Printf(\u0026#34;Server stop err: %v\u0026#34;, err) } } return nil } 2. 创建命令 ok 获得了 ctx，调用 app.NewServerCommand(ctx) 创建一个新的服务器命令\ncmd/karpor/app/server.go:97\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 func NewServerCommand(ctx context.Context) *cobra.Command { o, err := NewOptions(os.Stdout, os.Stderr) if err != nil { klog.Background().Error(err, \u0026#34;Unable to initialize command options\u0026#34;) klog.FlushAndExit(klog.ExitFlushTimeout, 1) } expvar.Publish(\u0026#34;CoreOptions\u0026#34;, expvar.Func(func() interface{} { return o.CoreOptions })) expvar.Publish(\u0026#34;StorageOptions\u0026#34;, expvar.Func(func() interface{} { return o.SearchStorageOptions })) expvar.Publish(\u0026#34;AIOptions\u0026#34;, expvar.Func(func() interface{} { displayOpts := *o.AIOptions displayOpts.AIAuthToken = \u0026#34;[hidden]\u0026#34; return \u0026amp;displayOpts })) expvar.Publish(\u0026#34;Version\u0026#34;, expvar.Func(func() interface{} { return version.GetVersion() })) cmd := \u0026amp;cobra.Command{ Use: \u0026#34;karpor\u0026#34;, Short: \u0026#34;Launch an API server\u0026#34;, Long: \u0026#34;Launch an API server\u0026#34;, RunE: func(c *cobra.Command, args []string) error { if o.CoreOptions.Version { fmt.Println(version.GetVersion()) return nil } if err := o.Complete(); err != nil { return err } if err := o.Validate(args); err != nil { return err } if err := o.RunServer(ctx.Done()); err != nil { return err } return nil }, } o.AddFlags(cmd.Flags()) return cmd } 创建 option -\u0026gt; 补全 option -\u0026gt; 校验 option -\u0026gt; 用 option 启动 server （和 k8s-apiserver 代码格式一模一样）\n然后创建 syncCmd 添加到 rootCmd 中 cmd.AddCommand(syncCmd)\n参数和标志 参数 ： go run main.go add 3 5 args 数组将会包含以下内容 args := []string{\u0026quot;3\u0026quot;, \u0026quot;5\u0026quot;}，这个很少用，一般使用命令标志。\ncmd/karpor/app/syncer.go:41\n1 2 3 4 5 6 7 options.AddFlags(cmd.Flags()) func (o *syncerOptions) AddFlags(fs *pflag.FlagSet) { fs.StringVar(\u0026amp;o.MetricsAddr, \u0026#34;metrics-bind-address\u0026#34;, \u0026#34;:8080\u0026#34;, \u0026#34;The address the metric endpoint binds to.\u0026#34;) fs.StringVar(\u0026amp;o.ProbeAddr, \u0026#34;health-probe-bind-address\u0026#34;, \u0026#34;:8081\u0026#34;, \u0026#34;The address the probe endpoint binds to.\u0026#34;) fs.StringSliceVar(\u0026amp;o.ElasticSearchAddresses, \u0026#34;elastic-search-addresses\u0026#34;, nil, \u0026#34;The elastic search address.\u0026#34;) } 3. 运行命令 1 2 code := cli.Run(cmd) os.Exit(code) 这个写法也很典型，它确保日志记录已正确设置。在日志记录设置之前，它将错误作为纯文本打印到标准错误输出。这涵盖了命令行标志解析错误和未知命令。之后，它会使用 klog 记录这些错误，这涵盖了运行时错误。\n","date":"2025-02-11T16:49:44+08:00","permalink":"https://lu-hongcheng.github.io/p/%E4%BA%91%E5%8E%9F%E7%94%9F%E4%BD%BF%E7%94%A8-cobra/","title":"云原生使用 Cobra"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\n分类 1 2 3 4 5 6 7 8 9 10 tags = [ \u0026#34;markdown\u0026#34;, \u0026#34;css\u0026#34;, \u0026#34;html\u0026#34;, \u0026#34;themes\u0026#34;, ] categories = [ \u0026#34;themes\u0026#34;, \u0026#34;syntax\u0026#34;, ] Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nInline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$Press CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image 图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://lu-hongcheng.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu_e95a4276bf860a84.jpg","permalink":"https://lu-hongcheng.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"}]